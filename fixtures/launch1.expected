package config

import (
	client1 "github.com/Clever/dapple/gen-go/client"
	client "github.com/Clever/workflow-manager/gen-go/client"
	"log"
	"os"
)

<<<<<<< HEAD
// WARNING this file was auto-generated by launch-gen, do not modify
=======
/*
WARNING this file was auto-generated by launch-gen, do not modify
*/

>>>>>>> add comments and fix missing retval
// LaunchConfig is auto-generated based on the launch YML file
type LaunchConfig struct {
	Deps Dependencies
	Env  Environment
}

// Dependencies has clients for the service's dependencies
type Dependencies struct {
	WorkflowManager client.Client
	Dapple          client1.Client
}

// Environment has environment variables and their values
type Environment struct {
	EnvVarA string
	EnvVarB string
}

// Init creates a LaunchConfig
func Init() LaunchConfig {
	workflowManager, err := client.NewFromDiscovery()
	if err != nil {
		log.Fatalf("discovery error: %s", err)
	}
	dapple, err := client1.NewFromDiscovery()
	if err != nil {
		log.Fatalf("discovery error: %s", err)
	}
	return LaunchConfig{
		Deps: Dependencies{
			Dapple:          dapple,
			WorkflowManager: workflowManager,
		},
		Env: Environment{
			EnvVarA: requireEnvVar("ENV_VAR_A"),
			EnvVarB: requireEnvVar("ENV_VAR_B"),
		},
	}
}
func requireEnvVar(s string) string {
	val := os.Getenv(s)
	if val == "" {
		log.Fatalf("env var %s is not defined", s)
	}
	return val
}
